[{"/Users/cryptogirl/Documents/GitHub/hackathon-2/src/index.js":"1","/Users/cryptogirl/Documents/GitHub/hackathon-2/src/reportWebVitals.js":"2","/Users/cryptogirl/Documents/GitHub/hackathon-2/src/App.js":"3","/Users/cryptogirl/Documents/GitHub/hackathon-2/src/components/BasicTable/BasicTable.js":"4","/Users/cryptogirl/Documents/GitHub/hackathon-2/src/pages/Homepage.js":"5","/Users/cryptogirl/Documents/GitHub/hackathon-2/src/components/HRTable/Table.js":"6","/Users/cryptogirl/Documents/GitHub/hackathon-2/src/components/Login.js":"7","/Users/cryptogirl/Documents/GitHub/hackathon-2/src/hooks/useEmployees.js":"8"},{"size":500,"mtime":1611247767669,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1611247767670,"results":"11","hashOfConfig":"10"},{"size":798,"mtime":1611270181648,"results":"12","hashOfConfig":"10"},{"size":1928,"mtime":1611258349529,"results":"13","hashOfConfig":"10"},{"size":554,"mtime":1611267866642,"results":"14","hashOfConfig":"10"},{"size":3575,"mtime":1611268038759,"results":"15","hashOfConfig":"10"},{"size":1476,"mtime":1611270049897,"results":"16","hashOfConfig":"10"},{"size":2510,"mtime":1611268393847,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"uohnqo",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},"/Users/cryptogirl/Documents/GitHub/hackathon-2/src/index.js",[],["41","42"],"/Users/cryptogirl/Documents/GitHub/hackathon-2/src/reportWebVitals.js",[],"/Users/cryptogirl/Documents/GitHub/hackathon-2/src/App.js",["43","44","45","46"],"import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport BasicTable from \"./components/BasicTable/BasicTable\";\nimport Table from \"./components/HRTable/Table\";\nimport Login from \"./components/Login\";\nimport Homepage from \"./pages/Homepage\";\nimport { BrowserRouter, Route, Switch, Router } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div>\n      {/* <Table /> */}\n      {/* <BasicTable /> */}\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/home\" component={BasicTable}></Route>\n        </Switch>\n        <Switch>\n          <Route exact path=\"/login\" component={Login} />\n        </Switch>\n        <Switch>\n          <Route exact path=\"/\" component={Homepage} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/cryptogirl/Documents/GitHub/hackathon-2/src/components/BasicTable/BasicTable.js",["47"],"import React, { useState, useEffect } from \"react\";\nimport { forwardRef } from \"react\";\nimport MaterialTable from \"material-table\";\nimport picasso from \"../images/picasso2.png\";\n\nfunction BasicTable() {\n  const [empolyees, setEmployees] = useState([]);\n\n  useEffect(() => {\n    fetch(\"https://my.api.mockaroo.com/employees?key=e1692940\")\n      .then((response) => response.json())\n      .then((data) => setEmployees(data));\n  }, []);\n\n  console.log(\"fake data u there?\", empolyees);\n  return (\n    <div\n      style={{\n        maxWidth: \"1000px\",\n        maxHeight: \"200px\",\n        margin: \"auto\",\n      }}\n    >\n      <img\n        src={picasso}\n        alt=\"painting\"\n        style={{ maxWidth: \"100%\", marginTop: \"30px\" }}\n      />\n      <MaterialTable\n        options={{ searchFieldAlignment: \"left\" }}\n        style={{ border: \"solid,1px,rgba(0, 0, 0, 0.3)\" }}\n        columns={[\n          { title: \"Name\", field: \"name\" },\n          { title: \"E-mail\", field: \"email\" },\n          { title: \"Position\", field: \"position\" },\n          { title: \"Education\", field: \"education\" },\n          { title: \"Former Employers\", field: \"former_employers\" },\n          {\n            title: \"Experience in field\",\n            field: \"experience_in_the_trade\",\n          },\n          { title: \"Special Knowledge\", field: \"special_knowledge\" },\n          { title: \"Hobbies\", field: \"hobbies\" },\n          { title: \"Network Connections\", field: \"\" },\n          { title: \"Special Skills\", field: \"skills\" },\n          { title: \"Languages\", field: \"languages\" },\n          { title: \"Software Skills\", field: \"software_skills\" },\n          { title: \"Talents\", field: \"talents\" },\n          { title: \"Customers\", field: \"customers\" },\n          { title: \"Projects\", field: \"projects\" },\n          { title: \"Further Training\", field: \"further_training\" },\n        ]}\n        data={empolyees}\n      />\n    </div>\n  );\n}\n\nexport default BasicTable;\n","/Users/cryptogirl/Documents/GitHub/hackathon-2/src/pages/Homepage.js",["48","49","50"],"import { useState, useEffect } from \"react\";\nimport useEmployees from \"../hooks/useEmployees\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Table from \"../components/HRTable/Table\";\nconst Homepage = () => {\n  const { employees, onAdd, onDelete, onUpdate } = useEmployees();\n  return (\n    <>\n      <ToastContainer />\n      <Table\n        tableData={employees}\n        onAdd={onAdd}\n        onDelete={onDelete}\n        onUpdate={onUpdate}\n      />\n    </>\n  );\n};\nexport default Homepage;\n","/Users/cryptogirl/Documents/GitHub/hackathon-2/src/components/HRTable/Table.js",["51"],"import React, { useState, useEffect } from \"react\";\nimport { forwardRef } from \"react\";\nimport MaterialTable from \"material-table\";\nimport Search from \"@material-ui/icons/Search\";\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport { FormatAlignCenter } from \"@material-ui/icons\";\n\nfunction Table({ tableData, onAdd, onDelete, onUpdate }) {\n  const [data, setData] = useState([]);\n  console.log(data);\n  useEffect(() => {\n    setData(tableData);\n  }, [tableData]);\n  const tableIcons = {\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  };\n  return (\n    <div style={{ maxWidth: \"1000px\", maxHeight: \"200px\", margin: \"auto\" }}>\n      <MaterialTable\n        icons={tableIcons}\n        options={{ searchFieldAlignment: \"left\" }}\n        columns={[\n          { title: \"Name\", field: \"name\" },\n          { title: \"E-mail\", field: \"email\" },\n          { title: \"Position\", field: \"position\" },\n          { title: \"Education\", field: \"education\" },\n          { title: \"Former Employers\", field: \"former_employers\" },\n          {\n            title: \"Experience in field\",\n            field: \"experience_in_the_trade\",\n          },\n          { title: \"Special Knowledge\", field: \"special_knowledge\" },\n          { title: \"Hobbies\", field: \"hobbies\" },\n          { title: \"Network Connections\", field: \"\" },\n          { title: \"Special Skills\", field: \"skills\" },\n          { title: \"Languages\", field: \"languages\" },\n          { title: \"Software Skills\", field: \"software_skills\" },\n          { title: \"Talents\", field: \"talents\" },\n          { title: \"Customers\", field: \"customers\" },\n          { title: \"Projects\", field: \"projects\" },\n          { title: \"Further Training\", field: \"further_training\" },\n        ]}\n        data={data}\n        // actions={[\n        //   {\n        //     icon: \"save\",\n        //     tooltip: \"Save User\",\n        //     onClick: (event, rowData) => {\n        //       // Do save operation\n        //       console.log(event, rowData);\n        //       onAdd();\n        //     },\n        //   },\n        // ]}\n        editable={{\n          onRowAddCancelled: (rowData) => console.log(\"Row adding cancelled\"),\n          onRowUpdateCancelled: (rowData) =>\n            console.log(\"Row editing cancelled\"),\n          onRowAdd: (newData) =>\n            new Promise((resolve, reject) => {\n              setTimeout(() => {\n                /* setData([...data, newData]); */\n\n                onAdd(newData);\n                resolve();\n              }, 1000);\n            }),\n          onRowUpdate: (newData, oldData) =>\n            new Promise((resolve, reject) => {\n              setTimeout(() => {\n                const dataUpdate = [...data];\n                const index = oldData.tableData.id;\n                dataUpdate[index] = newData;\n                console.log(dataUpdate);\n                setData(dataUpdate);\n                onUpdate(dataUpdate[index].id, newData);\n\n                resolve();\n              }, 1000);\n            }),\n          onRowDelete: (oldData) =>\n            new Promise((resolve, reject) => {\n              setTimeout(() => {\n                const dataDelete = [...tableData];\n                const index = oldData.tableData.id;\n                console.log(oldData);\n                dataDelete.splice(index, 1);\n                setData([...dataDelete]);\n                onDelete(oldData.id);\n                resolve();\n              }, 1000);\n            }),\n        }}\n      />\n    </div>\n  );\n}\n\nexport default Table;\n","/Users/cryptogirl/Documents/GitHub/hackathon-2/src/components/Login.js",["52","53","54","55","56","57","58","59"],"import React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport login from \"./images/login.png\"\nimport dove from \"./images/picasso-dove.png\"\n\n// import { postDataToPath } from \"../../utils/api\";\n\nexport default function Login() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [user, setUser] = useState(undefined);\n\n//   const handleSubmit = async (evt) => {\n//     evt.preventDefault();\n//     setMessage(\"\");\n//     const response = await postDataToPath(\"/api/auth/login\", { email, password });\n//     if (response.error) {\n//       setMessage(response.error);\n//     } else {\n//       setTimeout(() => {\n//         setUser(response);\n//       }, 2000);\n\n//       setMessage(\"\");\n//     }\n//   };\n\n//   if (user) {\n//     return <Redirect to={\"/user/dashboard\"} />;\n//   }\n\n  return (\n    <div>\n   <div className = \"welcome\">\n        Welcome!\n        </div>\n        <div className = \"login\">\n      <input className = \"login-field\" saveInput={setEmail} placeholder=\"Email\" type=\"text\" />\n      <br /><input\n        className=\"login-field\"\n        saveInput={setPassword}\n        placeholder=\"Password\"\n        type=\"password\"\n      />\n      </div>\n      <div>\n      <img className = \"login-button\" src={login} alt=\"login-button\" />\n    </div>\n    <div>\n    <img className = \"dove\" src={dove} alt=\"Picasso-dove\" />\n    </div>\n    </div>\n  );\n}","/Users/cryptogirl/Documents/GitHub/hackathon-2/src/hooks/useEmployees.js",["60"],"import { useState, useEffect } from \"react\";\nimport { toast } from \"react-toastify\";\nconst API_URL = process.env.REACT_APP_API_URL;\n\nexport default function useEmployees() {\n  const [employees, setEmployees] = useState([]);\n\n  useEffect(() => {\n    fetch(`${API_URL}/user`)\n      .then((response) => response.json())\n      .then((data) => setEmployees(data));\n  }, []);\n\n  const handleAdd = (newData) => {\n    console.log(\"hey\", newData);\n    if (!newData.name) {\n      // TODO: Put a nice message in the UI :)\n      toast.error(\"Please fill the name !\");\n    }\n    if (!newData.email) {\n      // TODO: Put a nice message in the UI :)\n      toast(\"Wow so easy !\");\n    }\n    if (!newData.position) {\n      // TODO: Put a nice message in the UI :)\n      toast(\"Wow so easy !\");\n    }\n    if (newData.name && newData.email && newData.position) {\n      const requestOptions = {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(newData),\n      };\n      fetch(`${API_URL}/use`, requestOptions)\n        .then((response) => {\n          if (!response.ok) {\n            response.json().then((json) => {\n              toast.error(json.message);\n            });\n          } else {\n            return response.json();\n          }\n        })\n        .then((employee) => setEmployees([...employees, employee]));\n      // TODO: need to catch the error.\n      // .catch(err =>  toast.error(json.message);)\n      // TODO: if fetch fail, then we should see a toast as well\n    }\n  };\n\n  const handleUpdate = (userId, newData) => {\n    console.log(\"update\", newData);\n    const requestOptions = {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(newData),\n    };\n\n    fetch(`${API_URL}/user/${userId}`, requestOptions)\n      .then((response) => response.json())\n      .then((data) => {\n        setEmployees((employees) =>\n          employees.map((employee) => {\n            if (employee.id === userId) {\n              return data;\n            }\n          })\n        );\n      });\n  };\n\n  const handleDelete = (userId) => {\n    const requestOptions = {\n      method: \"DELETE\",\n    };\n    fetch(`${API_URL}/user/${userId}`, requestOptions)\n      .then((response) => response.json())\n      .then((data) => setEmployees(data.id));\n  };\n  return {\n    onAdd: (newData) => handleAdd(newData),\n    onDelete: (id) => handleDelete(id),\n    employees,\n    onUpdate: (userId, newData) => handleUpdate(userId, newData),\n  };\n}\n",{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":1,"column":17,"nodeType":"67","messageId":"68","endLine":1,"endColumn":25},{"ruleId":"65","severity":1,"message":"69","line":1,"column":27,"nodeType":"67","messageId":"68","endLine":1,"endColumn":36},{"ruleId":"65","severity":1,"message":"70","line":4,"column":8,"nodeType":"67","messageId":"68","endLine":4,"endColumn":13},{"ruleId":"65","severity":1,"message":"71","line":7,"column":40,"nodeType":"67","messageId":"68","endLine":7,"endColumn":46},{"ruleId":"65","severity":1,"message":"72","line":2,"column":10,"nodeType":"67","messageId":"68","endLine":2,"endColumn":20},{"ruleId":"65","severity":1,"message":"66","line":1,"column":10,"nodeType":"67","messageId":"68","endLine":1,"endColumn":18},{"ruleId":"65","severity":1,"message":"69","line":1,"column":20,"nodeType":"67","messageId":"68","endLine":1,"endColumn":29},{"ruleId":"65","severity":1,"message":"73","line":3,"column":26,"nodeType":"67","messageId":"68","endLine":3,"endColumn":31},{"ruleId":"65","severity":1,"message":"74","line":6,"column":10,"nodeType":"67","messageId":"68","endLine":6,"endColumn":27},{"ruleId":"65","severity":1,"message":"75","line":2,"column":10,"nodeType":"67","messageId":"68","endLine":2,"endColumn":14},{"ruleId":"65","severity":1,"message":"76","line":2,"column":16,"nodeType":"67","messageId":"68","endLine":2,"endColumn":24},{"ruleId":"65","severity":1,"message":"77","line":9,"column":10,"nodeType":"67","messageId":"68","endLine":9,"endColumn":15},{"ruleId":"65","severity":1,"message":"78","line":10,"column":10,"nodeType":"67","messageId":"68","endLine":10,"endColumn":18},{"ruleId":"65","severity":1,"message":"79","line":11,"column":10,"nodeType":"67","messageId":"68","endLine":11,"endColumn":17},{"ruleId":"65","severity":1,"message":"80","line":11,"column":19,"nodeType":"67","messageId":"68","endLine":11,"endColumn":29},{"ruleId":"65","severity":1,"message":"81","line":12,"column":10,"nodeType":"67","messageId":"68","endLine":12,"endColumn":14},{"ruleId":"65","severity":1,"message":"82","line":12,"column":16,"nodeType":"67","messageId":"68","endLine":12,"endColumn":23},{"ruleId":"83","severity":1,"message":"84","line":63,"column":36,"nodeType":"85","messageId":"86","endLine":63,"endColumn":38},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Table' is defined but never used.","'Router' is defined but never used.","'forwardRef' is defined but never used.","'toast' is defined but never used.","'FormatAlignCenter' is defined but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.","'email' is assigned a value but never used.","'password' is assigned a value but never used.","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]