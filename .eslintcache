[{"/Users/cryptogirl/Documents/WildCode/Hackaton_2/hackathon-2/src/index.js":"1","/Users/cryptogirl/Documents/WildCode/Hackaton_2/hackathon-2/src/reportWebVitals.js":"2","/Users/cryptogirl/Documents/WildCode/Hackaton_2/hackathon-2/src/App.js":"3","/Users/cryptogirl/Documents/WildCode/Hackaton_2/hackathon-2/src/components/BasicTable/BasicTable.js":"4","/Users/cryptogirl/Documents/WildCode/Hackaton_2/hackathon-2/src/components/Login.js":"5","/Users/cryptogirl/Documents/WildCode/Hackaton_2/hackathon-2/src/components/HRTable/Table.js":"6"},{"size":500,"mtime":1611143900881,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1611143900882,"results":"9","hashOfConfig":"8"},{"size":923,"mtime":1611248507757,"results":"10","hashOfConfig":"8"},{"size":1933,"mtime":1611247942051,"results":"11","hashOfConfig":"8"},{"size":1387,"mtime":1611245432209,"results":"12","hashOfConfig":"8"},{"size":4006,"mtime":1611245432254,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1fz3u91",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"16"},"/Users/cryptogirl/Documents/WildCode/Hackaton_2/hackathon-2/src/index.js",[],["31","32"],"/Users/cryptogirl/Documents/WildCode/Hackaton_2/hackathon-2/src/reportWebVitals.js",[],"/Users/cryptogirl/Documents/WildCode/Hackaton_2/hackathon-2/src/App.js",["33"],"import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport BasicTable from \"./components/BasicTable/BasicTable\";\nimport Table from \"./components/HRTable/Table\";\nimport Login from \"./components/Login\";\nimport { BrowserRouter, Route, Switch, Router } from \"react-router-dom\";\n\nfunction App() {\n  const [empolyees, setEmployees] = useState([]);\n\n  useEffect(() => {\n    fetch(\"https://my.api.mockaroo.com/employees?key=e1692940\")\n      .then((response) => response.json())\n      .then((data) => setEmployees(data));\n  }, []);\n\n  console.log(\"fake data u there?\", empolyees);\n  return (\n    <div>\n      {/* <Table /> */}\n      <BasicTable />\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/login\" component={Login} />\n        </Switch>\n        <Switch>\n          <Route exact path=\"/\" component={Table} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/cryptogirl/Documents/WildCode/Hackaton_2/hackathon-2/src/components/BasicTable/BasicTable.js",["34"],"import React, { useState, useEffect } from \"react\";\nimport { forwardRef } from \"react\";\nimport MaterialTable from \"material-table\";\nimport picasso from \"../images/picasso2.png\";\n\nfunction BasicTable(props) {\n  const [empolyees, setEmployees] = useState([]);\n\n  useEffect(() => {\n    fetch(\"https://my.api.mockaroo.com/employees?key=e1692940\")\n      .then((response) => response.json())\n      .then((data) => setEmployees(data));\n  }, []);\n\n  console.log(\"fake data u there?\", empolyees);\n  return (\n    <div\n      style={{\n        maxWidth: \"1000px\",\n        maxHeight: \"200px\",\n        margin: \"auto\",\n      }}\n    >\n      <img\n        src={picasso}\n        alt=\"painting\"\n        style={{ maxWidth: \"100%\", marginTop: \"30px\" }}\n      />\n      <MaterialTable\n        options={{ searchFieldAlignment: \"left\" }}\n        style={{ border: \"solid,1px,rgba(0, 0, 0, 0.3)\" }}\n        columns={[\n          { title: \"Name\", field: \"name\" },\n          { title: \"E-mail\", field: \"email\" },\n          { title: \"Position\", field: \"position\" },\n          { title: \"Education\", field: \"education\" },\n          { title: \"Former Employers\", field: \"former_employers\" },\n          {\n            title: \"Experience in field\",\n            field: \"experience_in_the_trade\",\n          },\n          { title: \"Special Knowledge\", field: \"special_knowledge\" },\n          { title: \"Hobbies\", field: \"hobbies\" },\n          { title: \"Network Connections\", field: \"\" },\n          { title: \"Special Skills\", field: \"skills\" },\n          { title: \"Languages\", field: \"languages\" },\n          { title: \"Software Skills\", field: \"software_skills\" },\n          { title: \"Talents\", field: \"talents\" },\n          { title: \"Customers\", field: \"customers\" },\n          { title: \"Projects\", field: \"projects\" },\n          { title: \"Further Training\", field: \"further_training\" },\n        ]}\n        data={empolyees}\n      />\n    </div>\n  );\n}\n\nexport default BasicTable;\n","/Users/cryptogirl/Documents/WildCode/Hackaton_2/hackathon-2/src/components/Login.js",["35","36","37","38","39","40","41","42"],"import React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport login from \"./images/login.png\"\nimport dove from \"./images/picasso-dove.png\"\n\n// import { postDataToPath } from \"../../utils/api\";\n\nexport default function Login() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [user, setUser] = useState(undefined);\n\n//   const handleSubmit = async (evt) => {\n//     evt.preventDefault();\n//     setMessage(\"\");\n//     const response = await postDataToPath(\"/api/auth/login\", { email, password });\n//     if (response.error) {\n//       setMessage(response.error);\n//     } else {\n//       setTimeout(() => {\n//         setUser(response);\n//       }, 2000);\n\n//       setMessage(\"\");\n//     }\n//   };\n\n//   if (user) {\n//     return <Redirect to={\"/user/dashboard\"} />;\n//   }\n\n  return (\n    <div>\n   <div className = \"welcome\">\n        Welcome!\n        </div>\n        <div className = \"login\">\n      <input saveInput={setEmail} placeholder=\"Email\" type=\"text\" />\n      <input\n        saveInput={setPassword}\n        placeholder=\"Password\"\n        type=\"password\"\n      />\n      <img className = \"login-button\" src={login} alt=\"login-button\" />\n    </div>\n    <div>\n    <img className = \"dove\" src={dove} alt=\"Picasso-dove\" />\n    </div>\n    </div>\n  );\n}","/Users/cryptogirl/Documents/WildCode/Hackaton_2/hackathon-2/src/components/HRTable/Table.js",["43"],"import React, { useState, useEffect } from \"react\";\nimport { forwardRef } from \"react\";\nimport MaterialTable from \"material-table\";\nimport Search from \"@material-ui/icons/Search\";\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport { FormatAlignCenter } from \"@material-ui/icons\";\n\nfunction Table(props) {\n  const [empolyees, setEmployees] = useState([]);\n  const [data, setData] = useState(0);\n\n  const tableIcons = {\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  };\n\n  useEffect(() => {\n    fetch(\"https://my.api.mockaroo.com/employees?key=e1692940\")\n      .then((response) => response.json())\n      .then((data) => setEmployees(data));\n  }, []);\n\n  console.log(\"fake data u there?\", empolyees);\n  return (\n    <div style={{ maxWidth: \"1000px\", maxHeight: \"200px\", margin: \"auto\" }}>\n      <MaterialTable\n        icons={tableIcons}\n        options={\n          {searchFieldAlignment: \"left\"}\n        }\n        columns={[\n          { title: \"Name\", field: \"name\" },\n          { title: \"E-mail\", field: \"email\" },\n          { title: \"Position\", field: \"position\" },\n          { title: \"Education\", field: \"education\" },\n          { title: \"Former Employers\", field: \"former_employers\" },\n          {\n            title: \"Experience in field\",\n            field: \"experience_in_the_trade\",\n          },\n          { title: \"Special Knowledge\", field: \"special_knowledge\" },\n          { title: \"Hobbies\", field: \"hobbies\" },\n          { title: \"Network Connections\", field: \"\" },\n          { title: \"Special Skills\", field: \"skills\" },\n          { title: \"Languages\", field: \"languages\" },\n          { title: \"Software Skills\", field: \"software_skills\" },\n          { title: \"Talents\", field: \"talents\" },\n          { title: \"Customers\", field: \"customers\" },\n          { title: \"Projects\", field: \"projects\" },\n          { title: \"Further Training\", field: \"further_training\" },\n        ]}\n        data={empolyees}\n        actions={[\n          {\n            icon: \"save\",\n            tooltip: \"Save User\",\n            onClick: (event, rowData) => {\n              // Do save operation\n            },\n          },\n        ]}\n        editable={{\n          isEditable: (rowData) => rowData.name === \"a\", // only name(a) rows would be editable\n          isEditHidden: (rowData) => rowData.name === \"x\",\n          isDeletable: (rowData) => rowData.name === \"b\", // only name(b) rows would be deletable,\n          isDeleteHidden: (rowData) => rowData.name === \"y\",\n          onBulkUpdate: (changes) =>\n            new Promise((resolve, reject) => {\n              setTimeout(() => {\n                /* setData([...data, newData]); */\n\n                resolve();\n              }, 1000);\n            }),\n          onRowAddCancelled: (rowData) => console.log(\"Row adding cancelled\"),\n          onRowUpdateCancelled: (rowData) =>\n            console.log(\"Row editing cancelled\"),\n          onRowAdd: (newData) =>\n            new Promise((resolve, reject) => {\n              setTimeout(() => {\n                /* setData([...data, newData]); */\n\n                resolve();\n              }, 1000);\n            }),\n          onRowUpdate: (newData, oldData) =>\n            new Promise((resolve, reject) => {\n              setTimeout(() => {\n                const dataUpdate = [...data];\n                const index = oldData.tableData.id;\n                dataUpdate[index] = newData;\n                setData([...dataUpdate]);\n\n                resolve();\n              }, 1000);\n            }),\n          onRowDelete: (oldData) =>\n            new Promise((resolve, reject) => {\n              setTimeout(() => {\n                const dataDelete = [...data];\n                const index = oldData.tableData.id;\n                dataDelete.splice(index, 1);\n                setData([...dataDelete]);\n\n                resolve();\n              }, 1000);\n            }),\n        }}\n      />\n    </div>\n  );\n}\n\nexport default Table;\n",{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":6,"column":40,"nodeType":"50","messageId":"51","endLine":6,"endColumn":46},{"ruleId":"48","severity":1,"message":"52","line":2,"column":10,"nodeType":"50","messageId":"51","endLine":2,"endColumn":20},{"ruleId":"48","severity":1,"message":"53","line":2,"column":10,"nodeType":"50","messageId":"51","endLine":2,"endColumn":14},{"ruleId":"48","severity":1,"message":"54","line":2,"column":16,"nodeType":"50","messageId":"51","endLine":2,"endColumn":24},{"ruleId":"48","severity":1,"message":"55","line":9,"column":10,"nodeType":"50","messageId":"51","endLine":9,"endColumn":15},{"ruleId":"48","severity":1,"message":"56","line":10,"column":10,"nodeType":"50","messageId":"51","endLine":10,"endColumn":18},{"ruleId":"48","severity":1,"message":"57","line":11,"column":10,"nodeType":"50","messageId":"51","endLine":11,"endColumn":17},{"ruleId":"48","severity":1,"message":"58","line":11,"column":19,"nodeType":"50","messageId":"51","endLine":11,"endColumn":29},{"ruleId":"48","severity":1,"message":"59","line":12,"column":10,"nodeType":"50","messageId":"51","endLine":12,"endColumn":14},{"ruleId":"48","severity":1,"message":"60","line":12,"column":16,"nodeType":"50","messageId":"51","endLine":12,"endColumn":23},{"ruleId":"48","severity":1,"message":"61","line":6,"column":10,"nodeType":"50","messageId":"51","endLine":6,"endColumn":27},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'forwardRef' is defined but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.","'email' is assigned a value but never used.","'password' is assigned a value but never used.","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'FormatAlignCenter' is defined but never used.","no-global-assign","no-unsafe-negation"]